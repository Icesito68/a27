models:
  Video:
    title: string
    synopsis: longtext nullable
    duration: decimal:8,2
    relationships:
      hasMany: Comment

  Comment:
    user_id: id
    video_id: id
    content: longtext
    approved: boolean
    relationships:
      belongsTo: Video

  Watch:
    user_id: id
    video_id: id
    completed_at: datetime
    timestamps: false

  Conference:
    name: string
    city: string
    country: string
    postal_code: string
    relationships:
      hasMany: Venue, Speaker

  Venue:
    name: string
    description: string
    date_start: date
    date_end: date
    status: enum:pending,active,cancelled
    region: string
    relationships:
      belongsTo: Conference

  Speaker:
    name: string
    email: email
    biography: text
    twitter: string
    relationships:
      hasMany: Venue, Talk

  Talk:
    title: string
    description: longtext
    speaker_id: id
    relationships:
      belongsTo: Conference

seeders: Video, Comment, Watch, Conference, Venue, Speaker, Talk

controllers:
  Video:
    resource: index, show

  Comment:
    create:
      render: comment.create # Rederiza la vista para crear comentarios.
    store:
      validate: content # Valida que el contenido del comentario no este vacio.
      save: comment # Guarda el comentario.
      fire: NewComment with:comment # Ejecuta el evento NewComment con el comentario.
      send: CommentCreated with:comment # Envia el evento CommentCreated con el comentario.
      flash: message # Muestra un mensaje
      redirect: comment.create # Redirige a la vista para crear comentarios.

  Api\Watch:
    store:
      validate: user_id, video_id # Valida que el usuario y el video existan.
      save: watch # Guarda el registro de que el usuario vio el video.
      respond: 204 # Responde con un 204
